{"version":3,"sources":["../src/livecheck.js"],"names":["define","$","str","log","config","timeleftinsec","countdownInterval","boxContent","showBox","append","hideBox","empty","cacheStrings","get_strings","key","component","updateCountdown","get_string","done","s","html","a","sec","Math","floor","min","hour","addClass","removeClass","checkStatus","ajax","url","wwwroot","dataType","type","data","now","headers","success","result","clearInterval","setInterval","error","request","status","statusText","debug","init","params","checkinterval","backoff","setTimeout"],"mappings":"AAQAA,OAAM,yCAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,UAAvB,CAAmC,aAAnC,CAAD,CAAoD,SAASC,CAAT,CAAYC,CAAZ,CAAiBC,CAAjB,CAAsBC,CAAtB,CAA8B,CACpF,aADoF,GAIhFC,CAAAA,CAAa,CAAG,IAJgE,CAOhFC,CAAiB,CAAG,IAP4D,CAUhFC,CAAU,CAAG,IAVmE,CAepF,QAASC,CAAAA,CAAT,EAAmB,CAEf,GAAmB,IAAf,GAAAD,CAAJ,CAAyB,CAErBN,CAAC,CAAC,2BAAD,CAAD,CAA+BQ,MAA/B,CAAsC,sEAAtC,EACAF,CAAU,CAAGN,CAAC,CAAC,yBAAD,CACjB,CACJ,CAKD,QAASS,CAAAA,CAAT,EAAmB,CAEf,GAAmB,IAAf,GAAAH,CAAJ,CAAyB,CAErBN,CAAC,CAAC,2BAAD,CAAD,CAA+BU,KAA/B,GACAJ,CAAU,CAAG,IAChB,CACJ,CAOD,QAASK,CAAAA,CAAT,EAAwB,CACpBV,CAAG,CAACW,WAAJ,CAAgB,CACR,CAACC,GAAG,CAAE,iBAAN,CAAyBC,SAAS,CAAE,OAApC,CADQ,CAER,CAACD,GAAG,CAAE,4BAAN,CAAoCC,SAAS,CAAE,OAA/C,CAFQ,CAGR,CAACD,GAAG,CAAE,gCAAN,CAAwCC,SAAS,CAAE,OAAnD,CAHQ,CAAhB,CAKH,CAKD,QAASC,CAAAA,CAAT,EAA2B,CAEvBX,CAAa,EAAI,CAAjB,CAGA,GAAqB,CAAjB,EAAAA,CAAJ,CAAwB,CACpBH,CAAG,CAACe,UAAJ,CAAe,iBAAf,CAAkC,OAAlC,EAA2CC,IAA3C,CAAgD,SAASC,CAAT,CAAY,CACxDZ,CAAU,CAACa,IAAX,CAAgBD,CAAhB,CACH,CAFD,CAKH,CAND,IAMO,CACH,GAAIE,CAAAA,CAAC,CAAG,CACNC,GADM,CACAC,IAAI,CAACC,KAAL,CAAWnB,CAAa,CAAG,EAA3B,CADA,CAENoB,GAFM,CAEAF,IAAI,CAACC,KAAL,CAAWnB,CAAa,CAAG,EAA3B,EAAiC,EAFjC,CAGNqB,IAHM,CAGCH,IAAI,CAACC,KAAL,CAAWnB,CAAa,CAAG,IAA3B,CAHD,CAAR,CAIA,GAAa,CAAT,CAAAgB,CAAC,CAACK,IAAN,CAAgB,CACZxB,CAAG,CAACe,UAAJ,CAAe,gCAAf,CAAiD,OAAjD,CAA0DI,CAA1D,EAA6DH,IAA7D,CAAkE,SAASC,CAAT,CAAY,CAC1EZ,CAAU,CAACa,IAAX,CAAgBD,CAAhB,CACH,CAFD,CAGH,CAJD,IAIO,CACHjB,CAAG,CAACe,UAAJ,CAAe,4BAAf,CAA6C,OAA7C,CAAsDI,CAAtD,EAAyDH,IAAzD,CAA8D,SAASC,CAAT,CAAY,CACtEZ,CAAU,CAACa,IAAX,CAAgBD,CAAhB,CACH,CAFD,CAGH,CACJ,CAGD,GAAoB,EAAhB,CAAAd,CAAJ,CAAwB,CACpBE,CAAU,CAACoB,QAAX,CAAoB,aAApB,EAAmCA,QAAnC,CAA4C,cAA5C,EAA4DC,WAA5D,CAAwE,eAAxE,CACH,CAFD,IAEO,CACHrB,CAAU,CAACoB,QAAX,CAAoB,eAApB,EAAqCC,WAArC,CAAiD,aAAjD,EAAgEA,WAAhE,CAA4E,aAA5E,CACH,CACJ,CAKD,QAASC,CAAAA,CAAT,EAAuB,CAInB5B,CAAC,CAAC6B,IAAF,CAAO,CACHC,GAAG,CAAE3B,CAAM,CAAC4B,OAAP,CAAiB,uCADnB,CAEHC,QAAQ,CAAE,MAFP,CAGHC,IAAI,CAAE,MAHH,CAIHC,IAAI,CAAE,CAEF,KAAQlC,CAAC,CAACmC,GAAF,EAFN,CAJH,CAQHC,OAAO,CAAE,CACL,gBAAiB,UADZ,CAEL,QAAW,IAFN,CARN,CAYHC,OAAO,CAAE,iBAASC,CAAT,CAAiB,CAEtB,GAA6B,IAAzB,GAAAA,CAAM,CAAClC,aAAX,CAAmC,CAE/BK,CAAO,GAGPL,CAAa,CAAG,IAAhB,CAGAmC,aAAa,CAAClC,CAAD,CAGhB,CAXD,IAWO,IAA6B,IAAzB,GAAAiC,CAAM,CAAClC,aAAP,EAAwD,CAAvB,CAAAkC,CAAM,CAAClC,aAA5C,CAA+D,CAElEG,CAAO,GAGPH,CAAa,CAAGkC,CAAM,CAAClC,aAAvB,CAGAmC,aAAa,CAAClC,CAAD,CAAb,CACAA,CAAiB,CAAGmC,WAAW,CAACzB,CAAD,CAAkB,GAAlB,CAGlC,CAZM,IAYA,IAA6B,IAAzB,GAAAuB,CAAM,CAAClC,aAAP,EAA0D,CAAzB,GAAAkC,CAAM,CAAClC,aAA5C,CAAiE,CAEpEG,CAAO,GAGPH,CAAa,CAAG,CAAhB,CAGAmC,aAAa,CAAClC,CAAD,CAAb,CACAU,CAAe,EAClB,CACJ,CAhDE,CAiDH0B,KAAK,CAAE,eAASC,CAAT,CAAkB,CAErB,GAAsB,GAAlB,EAAAA,CAAO,CAACC,MAAR,EAA+C,0BAAtB,EAAAD,CAAO,CAACE,UAArC,CAA+E,CAE3ErC,CAAO,GAGPH,CAAa,CAAG,CAAhB,CAGAmC,aAAa,CAAClC,CAAD,CAAb,CACAU,CAAe,EAGlB,CAZD,IAYO,IAAsB,GAAlB,EAAA2B,CAAO,CAACC,MAAR,EAA2C,GAAlB,EAAAD,CAAO,CAACC,MAArC,CAAoD,CAEvDzC,CAAG,CAAC2C,KAAJ,4LAKApC,CAAO,GAGPL,CAAa,CAAG,IAAhB,CAGAmC,aAAa,CAAClC,CAAD,CAChB,CACJ,CA9EE,CAAP,CAgFH,CAED,MAAO,CACHyC,IAAI,CAAE,cAASC,CAAT,CAAiB,CAEnB,GAA6B,IAAzB,GAAAA,CAAM,CAACC,aAAP,EAAwD,CAAvB,CAAAD,CAAM,CAACC,aAA5C,CAA+D,CAE3DhD,CAAC,CAAC,MAAD,CAAD,CAAUQ,MAAV,CAAiB,uCAAjB,EAGA,GAAuB,IAAnB,GAAAuC,CAAM,CAACE,OAAP,EAA4C,CAAjB,CAAAF,CAAM,CAACE,OAAtC,CAAmD,CAE/CC,UAAU,CAAC,UAAW,CAClBV,WAAW,CAACZ,CAAD,CAAqC,GAAvB,CAAAmB,CAAM,CAACC,aAArB,CACd,CAFS,CAEU,GAAjB,CAAAD,CAAM,CAACE,OAFA,CAKb,CAPD,IAOO,CAEHT,WAAW,CAACZ,CAAD,CAAqC,GAAvB,CAAAmB,CAAM,CAACC,aAArB,CACd,CAGDrC,CAAY,EACf,CACJ,CAvBE,CAyBV,CAzMK,CAAN","sourcesContent":["/**\n * Local plugin \"Maintenance mode (live check)\" - JS Code\n *\n * @package   local_maintenance_livecheck\n * @copyright 2017 Alexander Bias, University of Ulm <alexander.bias@uni-ulm.de>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/log', 'core/config'], function($, str, log, config) {\n    \"use strict\";\n\n    // Global variable for left time.\n    var timeleftinsec = null;\n\n    // Global variable for countdown interval.\n    var countdownInterval = null;\n\n    // Global variable for maintenance announcement box content.\n    var boxContent = null;\n\n    /**\n     * Function which shows the maintenance announcement box.\n     */\n    function showBox() {\n        // If maintenance announcement box does not have content already.\n        if (boxContent === null) {\n            // Create the maintenance announcement box content and save it globally.\n            $('#maintenance_announcement').append('<div class=\"box moodle-has-zindex maintenancewarning m-a-1 alert\">');\n            boxContent = $('.box.maintenancewarning');\n        }\n    }\n\n    /**\n     * Function which hides the maintenance announcement box.\n     */\n    function hideBox() {\n        // If maintenance announcement box still has content.\n        if (boxContent !== null) {\n            // Remove the content and reset the box content's global variable.\n            $('#maintenance_announcement').empty();\n            boxContent = null;\n        }\n    }\n\n    /**\n     * This function fetches the necessary strings once and caches them locally in the browser.\n     * This is needed because we won't be able to get the sitemaintenance string anymore from the server as soon as\n     * maintenance mode has started.\n     */\n    function cacheStrings() {\n        str.get_strings([\n                {key: 'sitemaintenance', component: 'admin'},\n                {key: 'maintenancemodeisscheduled', component: 'admin'},\n                {key: 'maintenancemodeisscheduledlong', component: 'admin'}\n            ]);\n    }\n\n    /**\n     * Function to update the countdown in the maintenance announcement box.\n     */\n    function updateCountdown() {\n        // Reduce left time globally.\n        timeleftinsec -= 1;\n\n        // Maintenance mode has started.\n        if (timeleftinsec <= 0) {\n            str.get_string('sitemaintenance', 'admin').done(function(s) {\n                boxContent.html(s);\n            });\n\n            // Maintenance mode is still scheduled.\n        } else {\n            var a = {};\n            a.sec = Math.floor(timeleftinsec % 60);\n            a.min = Math.floor(timeleftinsec / 60) % 60;\n            a.hour = Math.floor(timeleftinsec / 3600);\n            if (a.hour > 0) {\n                str.get_string('maintenancemodeisscheduledlong', 'admin', a).done(function(s) {\n                    boxContent.html(s);\n                });\n            } else {\n                str.get_string('maintenancemodeisscheduled', 'admin', a).done(function(s) {\n                    boxContent.html(s);\n                });\n            }\n        }\n\n        // Set maintenance announcement box class to highlight the importance.\n        if (timeleftinsec < 30) {\n            boxContent.addClass('alert-error').addClass('alert-danger').removeClass('alert-warning');\n        } else {\n            boxContent.addClass('alert-warning').removeClass('alert-error').removeClass('alert-error');\n        }\n    }\n\n    /**\n     * Function which performs the continuous live check.\n     */\n    function checkStatus() {\n        // Fetch maintenance mode status by AJAX.\n        // We know about the benefits of the core/ajax module (https://docs.moodle.org/dev/AJAX),\n        // but for this very lightweight check we only use a simple jQuery AJAX call.\n        $.ajax({\n            url: config.wwwroot + '/local/maintenance_livecheck/ajax.php',\n            dataType: 'json',\n            type: 'POST',\n            data: {\n                // Add a query string to prevent older versions of IE from using the cache.\n                'time': $.now()\n            },\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Expires': '-1'\n            },\n            success: function(result) {\n                // If CLI maintenance mode is not scheduled or active.\n                if (result.timeleftinsec === null) {\n                    // Hide the maintenance announcement box.\n                    hideBox();\n\n                    // Clear the left time globally.\n                    timeleftinsec = null;\n\n                    // Stop the countdown interval.\n                    clearInterval(countdownInterval);\n\n                    // Otherwise, if CLI maintenance mode is scheduled.\n                } else if (result.timeleftinsec !== null && result.timeleftinsec > 0) {\n                    // Show the maintenance announcement box.\n                    showBox();\n\n                    // Store the left time globally.\n                    timeleftinsec = result.timeleftinsec;\n\n                    // Re-Start the countdown interval.\n                    clearInterval(countdownInterval);\n                    countdownInterval = setInterval(updateCountdown, 1000);\n\n                    // Otherwise, if legacy maintenance mode is active.\n                } else if (result.timeleftinsec !== null && result.timeleftinsec === 0) {\n                    // Show the maintenance announcement box.\n                    showBox();\n\n                    // Store the left time globally.\n                    timeleftinsec = 0;\n\n                    // Stop the countdown and run it once to show the sitemaintenance message.\n                    clearInterval(countdownInterval);\n                    updateCountdown();\n                }\n            },\n            error: function(request) {\n                // If CLI maintenance mode is active.\n                if (request.status == 503 && request.statusText == 'Moodle under maintenance') {\n                    // Show the maintenance announcement box.\n                    showBox();\n\n                    // Store the left time globally.\n                    timeleftinsec = 0;\n\n                    // Stop the countdown and run it once to show the sitemaintenance message.\n                    clearInterval(countdownInterval);\n                    updateCountdown();\n\n                    // The AJAX call was cached somewhere.\n                } else if (request.status >= 300 && request.status <= 399) {\n                    // Warn the developer.\n                    log.debug('moodle-local_maintenance_livecheck-livecheck: ' +\n                            'A cached copy of the live check answer was returned so it\\'s reliablity cannot be guaranteed. ' +\n                            'Hiding the maintenance announcement box now.');\n\n                    // Hide the maintenance announcement box.\n                    hideBox();\n\n                    // Clear the left time globally.\n                    timeleftinsec = null;\n\n                    // Stop the countdown interval.\n                    clearInterval(countdownInterval);\n                }\n            }\n        });\n    }\n\n    return {\n        init: function(params) {\n            // Initialize continuous live check.\n            if (params.checkinterval !== null && params.checkinterval > 0) {\n                // Add maintenance announcement box to page.\n                $('body').append('<div id=\"maintenance_announcement\">');\n\n                // If a back off time is set.\n                if (params.backoff !== null && params.backoff > 0) {\n                    // Wait params.backoff seconds and then check status every params.checkinterval seconds.\n                    setTimeout(function() {\n                        setInterval(checkStatus, params.checkinterval * 1000);\n                    }, params.backoff * 1000);\n\n                    // Otherwise if no back off time is set.\n                } else {\n                    // Check status every params.checkinterval seconds.\n                    setInterval(checkStatus, params.checkinterval * 1000);\n                }\n\n                // Cache strings in browser.\n                cacheStrings();\n            }\n        }\n    };\n});\n"],"file":"livecheck.min.js"}